// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StudentDashboardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final TextView tvCourseCode1;

  @NonNull
  public final TextView tvCourseCode2;

  @NonNull
  public final TextView tvCourseCode3;

  @NonNull
  public final TextView tvGreeting;

  @NonNull
  public final TextView tvStudentName;

  private StudentDashboardBinding(@NonNull RelativeLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull EditText etSearch,
      @NonNull TextView tvCourseCode1, @NonNull TextView tvCourseCode2,
      @NonNull TextView tvCourseCode3, @NonNull TextView tvGreeting,
      @NonNull TextView tvStudentName) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.etSearch = etSearch;
    this.tvCourseCode1 = tvCourseCode1;
    this.tvCourseCode2 = tvCourseCode2;
    this.tvCourseCode3 = tvCourseCode3;
    this.tvGreeting = tvGreeting;
    this.tvStudentName = tvStudentName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StudentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StudentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.student_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StudentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.etSearch;
      EditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.tvCourseCode1;
      TextView tvCourseCode1 = ViewBindings.findChildViewById(rootView, id);
      if (tvCourseCode1 == null) {
        break missingId;
      }

      id = R.id.tvCourseCode2;
      TextView tvCourseCode2 = ViewBindings.findChildViewById(rootView, id);
      if (tvCourseCode2 == null) {
        break missingId;
      }

      id = R.id.tvCourseCode3;
      TextView tvCourseCode3 = ViewBindings.findChildViewById(rootView, id);
      if (tvCourseCode3 == null) {
        break missingId;
      }

      id = R.id.tvGreeting;
      TextView tvGreeting = ViewBindings.findChildViewById(rootView, id);
      if (tvGreeting == null) {
        break missingId;
      }

      id = R.id.tvStudentName;
      TextView tvStudentName = ViewBindings.findChildViewById(rootView, id);
      if (tvStudentName == null) {
        break missingId;
      }

      return new StudentDashboardBinding((RelativeLayout) rootView, bottomNavigationView, etSearch,
          tvCourseCode1, tvCourseCode2, tvCourseCode3, tvGreeting, tvStudentName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
