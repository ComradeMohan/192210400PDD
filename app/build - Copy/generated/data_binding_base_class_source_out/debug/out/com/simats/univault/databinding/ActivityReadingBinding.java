// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReadingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button completeTopicButton;

  @NonNull
  public final ScrollView contentScrollView;

  @NonNull
  public final TextView courseName;

  @NonNull
  public final LinearLayout loadingSpinnerLayout;

  @NonNull
  public final CheckBox markAsReadCheckbox;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final Button previousButton;

  @NonNull
  public final TextView progressText;

  @NonNull
  public final TextView readStatus;

  @NonNull
  public final TextView studyTimeText;

  @NonNull
  public final TextView topicName;

  @NonNull
  public final ProgressBar topicProgress;

  @NonNull
  public final WebView topicWebView;

  private ActivityReadingBinding(@NonNull LinearLayout rootView,
      @NonNull Button completeTopicButton, @NonNull ScrollView contentScrollView,
      @NonNull TextView courseName, @NonNull LinearLayout loadingSpinnerLayout,
      @NonNull CheckBox markAsReadCheckbox, @NonNull Button nextButton,
      @NonNull Button previousButton, @NonNull TextView progressText, @NonNull TextView readStatus,
      @NonNull TextView studyTimeText, @NonNull TextView topicName,
      @NonNull ProgressBar topicProgress, @NonNull WebView topicWebView) {
    this.rootView = rootView;
    this.completeTopicButton = completeTopicButton;
    this.contentScrollView = contentScrollView;
    this.courseName = courseName;
    this.loadingSpinnerLayout = loadingSpinnerLayout;
    this.markAsReadCheckbox = markAsReadCheckbox;
    this.nextButton = nextButton;
    this.previousButton = previousButton;
    this.progressText = progressText;
    this.readStatus = readStatus;
    this.studyTimeText = studyTimeText;
    this.topicName = topicName;
    this.topicProgress = topicProgress;
    this.topicWebView = topicWebView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReadingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReadingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reading, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReadingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.completeTopicButton;
      Button completeTopicButton = ViewBindings.findChildViewById(rootView, id);
      if (completeTopicButton == null) {
        break missingId;
      }

      id = R.id.contentScrollView;
      ScrollView contentScrollView = ViewBindings.findChildViewById(rootView, id);
      if (contentScrollView == null) {
        break missingId;
      }

      id = R.id.courseName;
      TextView courseName = ViewBindings.findChildViewById(rootView, id);
      if (courseName == null) {
        break missingId;
      }

      id = R.id.loadingSpinnerLayout;
      LinearLayout loadingSpinnerLayout = ViewBindings.findChildViewById(rootView, id);
      if (loadingSpinnerLayout == null) {
        break missingId;
      }

      id = R.id.markAsReadCheckbox;
      CheckBox markAsReadCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (markAsReadCheckbox == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.previousButton;
      Button previousButton = ViewBindings.findChildViewById(rootView, id);
      if (previousButton == null) {
        break missingId;
      }

      id = R.id.progressText;
      TextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.readStatus;
      TextView readStatus = ViewBindings.findChildViewById(rootView, id);
      if (readStatus == null) {
        break missingId;
      }

      id = R.id.studyTimeText;
      TextView studyTimeText = ViewBindings.findChildViewById(rootView, id);
      if (studyTimeText == null) {
        break missingId;
      }

      id = R.id.topicName;
      TextView topicName = ViewBindings.findChildViewById(rootView, id);
      if (topicName == null) {
        break missingId;
      }

      id = R.id.topicProgress;
      ProgressBar topicProgress = ViewBindings.findChildViewById(rootView, id);
      if (topicProgress == null) {
        break missingId;
      }

      id = R.id.topicWebView;
      WebView topicWebView = ViewBindings.findChildViewById(rootView, id);
      if (topicWebView == null) {
        break missingId;
      }

      return new ActivityReadingBinding((LinearLayout) rootView, completeTopicButton,
          contentScrollView, courseName, loadingSpinnerLayout, markAsReadCheckbox, nextButton,
          previousButton, progressText, readStatus, studyTimeText, topicName, topicProgress,
          topicWebView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
