// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDepartmentCoursesBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton btnAddCourse;

  @NonNull
  public final MaterialButton btnBack;

  @NonNull
  public final RelativeLayout departmentCoursesRoot;

  @NonNull
  public final LinearLayout layoutContent;

  @NonNull
  public final LinearLayout llEmptyState;

  @NonNull
  public final RecyclerView rvCourses;

  @NonNull
  public final TextView tvCourseTitle;

  private FragmentDepartmentCoursesBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton btnAddCourse, @NonNull MaterialButton btnBack,
      @NonNull RelativeLayout departmentCoursesRoot, @NonNull LinearLayout layoutContent,
      @NonNull LinearLayout llEmptyState, @NonNull RecyclerView rvCourses,
      @NonNull TextView tvCourseTitle) {
    this.rootView = rootView;
    this.btnAddCourse = btnAddCourse;
    this.btnBack = btnBack;
    this.departmentCoursesRoot = departmentCoursesRoot;
    this.layoutContent = layoutContent;
    this.llEmptyState = llEmptyState;
    this.rvCourses = rvCourses;
    this.tvCourseTitle = tvCourseTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDepartmentCoursesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDepartmentCoursesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_department_courses, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDepartmentCoursesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddCourse;
      MaterialButton btnAddCourse = ViewBindings.findChildViewById(rootView, id);
      if (btnAddCourse == null) {
        break missingId;
      }

      id = R.id.btnBack;
      MaterialButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      RelativeLayout departmentCoursesRoot = (RelativeLayout) rootView;

      id = R.id.layoutContent;
      LinearLayout layoutContent = ViewBindings.findChildViewById(rootView, id);
      if (layoutContent == null) {
        break missingId;
      }

      id = R.id.llEmptyState;
      LinearLayout llEmptyState = ViewBindings.findChildViewById(rootView, id);
      if (llEmptyState == null) {
        break missingId;
      }

      id = R.id.rvCourses;
      RecyclerView rvCourses = ViewBindings.findChildViewById(rootView, id);
      if (rvCourses == null) {
        break missingId;
      }

      id = R.id.tvCourseTitle;
      TextView tvCourseTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvCourseTitle == null) {
        break missingId;
      }

      return new FragmentDepartmentCoursesBinding((RelativeLayout) rootView, btnAddCourse, btnBack,
          departmentCoursesRoot, layoutContent, llEmptyState, rvCourses, tvCourseTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
