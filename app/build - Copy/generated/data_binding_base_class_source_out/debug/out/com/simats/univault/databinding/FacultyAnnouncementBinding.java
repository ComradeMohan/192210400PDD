// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FacultyAnnouncementBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout attachmentContainer;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnSend;

  @NonNull
  public final EditText etMessage;

  @NonNull
  public final EditText etTitle;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView tvSchedule;

  @NonNull
  public final TextView tvSendTo;

  private FacultyAnnouncementBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout attachmentContainer, @NonNull Button btnCancel, @NonNull Button btnSend,
      @NonNull EditText etMessage, @NonNull EditText etTitle, @NonNull ScrollView scrollView,
      @NonNull TextView tvSchedule, @NonNull TextView tvSendTo) {
    this.rootView = rootView;
    this.attachmentContainer = attachmentContainer;
    this.btnCancel = btnCancel;
    this.btnSend = btnSend;
    this.etMessage = etMessage;
    this.etTitle = etTitle;
    this.scrollView = scrollView;
    this.tvSchedule = tvSchedule;
    this.tvSendTo = tvSendTo;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FacultyAnnouncementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FacultyAnnouncementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.faculty_announcement, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FacultyAnnouncementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attachmentContainer;
      LinearLayout attachmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (attachmentContainer == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSend;
      Button btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.etMessage;
      EditText etMessage = ViewBindings.findChildViewById(rootView, id);
      if (etMessage == null) {
        break missingId;
      }

      id = R.id.etTitle;
      EditText etTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTitle == null) {
        break missingId;
      }

      ScrollView scrollView = (ScrollView) rootView;

      id = R.id.tvSchedule;
      TextView tvSchedule = ViewBindings.findChildViewById(rootView, id);
      if (tvSchedule == null) {
        break missingId;
      }

      id = R.id.tvSendTo;
      TextView tvSendTo = ViewBindings.findChildViewById(rootView, id);
      if (tvSendTo == null) {
        break missingId;
      }

      return new FacultyAnnouncementBinding((ScrollView) rootView, attachmentContainer, btnCancel,
          btnSend, etMessage, etTitle, scrollView, tvSchedule, tvSendTo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
