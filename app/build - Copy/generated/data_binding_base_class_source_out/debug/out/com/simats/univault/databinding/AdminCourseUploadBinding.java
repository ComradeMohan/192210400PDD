// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminCourseUploadBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView backArrow;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final LinearLayout fileListLayout;

  @NonNull
  public final LinearLayout uploadBox;

  @NonNull
  public final Button uploadButton;

  private AdminCourseUploadBinding(@NonNull ScrollView rootView, @NonNull ImageView backArrow,
      @NonNull Button cancelButton, @NonNull LinearLayout fileListLayout,
      @NonNull LinearLayout uploadBox, @NonNull Button uploadButton) {
    this.rootView = rootView;
    this.backArrow = backArrow;
    this.cancelButton = cancelButton;
    this.fileListLayout = fileListLayout;
    this.uploadBox = uploadBox;
    this.uploadButton = uploadButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminCourseUploadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminCourseUploadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_course_upload, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminCourseUploadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_arrow;
      ImageView backArrow = ViewBindings.findChildViewById(rootView, id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.file_list_layout;
      LinearLayout fileListLayout = ViewBindings.findChildViewById(rootView, id);
      if (fileListLayout == null) {
        break missingId;
      }

      id = R.id.upload_box;
      LinearLayout uploadBox = ViewBindings.findChildViewById(rootView, id);
      if (uploadBox == null) {
        break missingId;
      }

      id = R.id.upload_button;
      Button uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      return new AdminCourseUploadBinding((ScrollView) rootView, backArrow, cancelButton,
          fileListLayout, uploadBox, uploadButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
