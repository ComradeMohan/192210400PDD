// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEventBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView buttonDelete;

  @NonNull
  public final MaterialButton buttonNotify;

  @NonNull
  public final FrameLayout deleteFrame;

  @NonNull
  public final TextView textViewEventDescription;

  @NonNull
  public final TextView textViewEventEndDate;

  @NonNull
  public final TextView textViewEventStartDate;

  @NonNull
  public final TextView textViewEventTitle;

  @NonNull
  public final TextView textViewEventType;

  private ItemEventBinding(@NonNull CardView rootView, @NonNull ImageView buttonDelete,
      @NonNull MaterialButton buttonNotify, @NonNull FrameLayout deleteFrame,
      @NonNull TextView textViewEventDescription, @NonNull TextView textViewEventEndDate,
      @NonNull TextView textViewEventStartDate, @NonNull TextView textViewEventTitle,
      @NonNull TextView textViewEventType) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonNotify = buttonNotify;
    this.deleteFrame = deleteFrame;
    this.textViewEventDescription = textViewEventDescription;
    this.textViewEventEndDate = textViewEventEndDate;
    this.textViewEventStartDate = textViewEventStartDate;
    this.textViewEventTitle = textViewEventTitle;
    this.textViewEventType = textViewEventType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDelete;
      ImageView buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.buttonNotify;
      MaterialButton buttonNotify = ViewBindings.findChildViewById(rootView, id);
      if (buttonNotify == null) {
        break missingId;
      }

      id = R.id.deleteFrame;
      FrameLayout deleteFrame = ViewBindings.findChildViewById(rootView, id);
      if (deleteFrame == null) {
        break missingId;
      }

      id = R.id.textViewEventDescription;
      TextView textViewEventDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewEventDescription == null) {
        break missingId;
      }

      id = R.id.textViewEventEndDate;
      TextView textViewEventEndDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewEventEndDate == null) {
        break missingId;
      }

      id = R.id.textViewEventStartDate;
      TextView textViewEventStartDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewEventStartDate == null) {
        break missingId;
      }

      id = R.id.textViewEventTitle;
      TextView textViewEventTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewEventTitle == null) {
        break missingId;
      }

      id = R.id.textViewEventType;
      TextView textViewEventType = ViewBindings.findChildViewById(rootView, id);
      if (textViewEventType == null) {
        break missingId;
      }

      return new ItemEventBinding((CardView) rootView, buttonDelete, buttonNotify, deleteFrame,
          textViewEventDescription, textViewEventEndDate, textViewEventStartDate,
          textViewEventTitle, textViewEventType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
