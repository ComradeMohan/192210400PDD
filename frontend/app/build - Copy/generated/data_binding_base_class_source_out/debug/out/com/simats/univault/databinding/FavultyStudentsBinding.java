// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FavultyStudentsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final LinearLayout rootLayout;

  @NonNull
  public final EditText searchEditText;

  @NonNull
  public final ImageView searchIcon;

  @NonNull
  public final TextView studentId;

  @NonNull
  public final TextView studentName;

  @NonNull
  public final LinearLayout studentsList;

  @NonNull
  public final TextView titleStudents;

  private FavultyStudentsBinding(@NonNull RelativeLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull LinearLayout rootLayout,
      @NonNull EditText searchEditText, @NonNull ImageView searchIcon, @NonNull TextView studentId,
      @NonNull TextView studentName, @NonNull LinearLayout studentsList,
      @NonNull TextView titleStudents) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.rootLayout = rootLayout;
    this.searchEditText = searchEditText;
    this.searchIcon = searchIcon;
    this.studentId = studentId;
    this.studentName = studentName;
    this.studentsList = studentsList;
    this.titleStudents = titleStudents;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FavultyStudentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FavultyStudentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.favulty_students, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FavultyStudentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.rootLayout;
      LinearLayout rootLayout = ViewBindings.findChildViewById(rootView, id);
      if (rootLayout == null) {
        break missingId;
      }

      id = R.id.searchEditText;
      EditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.searchIcon;
      ImageView searchIcon = ViewBindings.findChildViewById(rootView, id);
      if (searchIcon == null) {
        break missingId;
      }

      id = R.id.studentId;
      TextView studentId = ViewBindings.findChildViewById(rootView, id);
      if (studentId == null) {
        break missingId;
      }

      id = R.id.studentName;
      TextView studentName = ViewBindings.findChildViewById(rootView, id);
      if (studentName == null) {
        break missingId;
      }

      id = R.id.studentsList;
      LinearLayout studentsList = ViewBindings.findChildViewById(rootView, id);
      if (studentsList == null) {
        break missingId;
      }

      id = R.id.titleStudents;
      TextView titleStudents = ViewBindings.findChildViewById(rootView, id);
      if (titleStudents == null) {
        break missingId;
      }

      return new FavultyStudentsBinding((RelativeLayout) rootView, bottomNavigationView, rootLayout,
          searchEditText, searchIcon, studentId, studentName, studentsList, titleStudents);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
