// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddNoticeViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnDeleteNotice;

  @NonNull
  public final TextView tvNoticeDate;

  @NonNull
  public final TextView tvNoticeDetails;

  @NonNull
  public final TextView tvNoticeTitle;

  private AddNoticeViewBinding(@NonNull LinearLayout rootView, @NonNull Button btnDeleteNotice,
      @NonNull TextView tvNoticeDate, @NonNull TextView tvNoticeDetails,
      @NonNull TextView tvNoticeTitle) {
    this.rootView = rootView;
    this.btnDeleteNotice = btnDeleteNotice;
    this.tvNoticeDate = tvNoticeDate;
    this.tvNoticeDetails = tvNoticeDetails;
    this.tvNoticeTitle = tvNoticeTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddNoticeViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddNoticeViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_notice_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddNoticeViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteNotice;
      Button btnDeleteNotice = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteNotice == null) {
        break missingId;
      }

      id = R.id.tvNoticeDate;
      TextView tvNoticeDate = ViewBindings.findChildViewById(rootView, id);
      if (tvNoticeDate == null) {
        break missingId;
      }

      id = R.id.tvNoticeDetails;
      TextView tvNoticeDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvNoticeDetails == null) {
        break missingId;
      }

      id = R.id.tvNoticeTitle;
      TextView tvNoticeTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvNoticeTitle == null) {
        break missingId;
      }

      return new AddNoticeViewBinding((LinearLayout) rootView, btnDeleteNotice, tvNoticeDate,
          tvNoticeDetails, tvNoticeTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
