// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDeptCourseBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton btnDeleteCourse;

  @NonNull
  public final CardView courseIconCard;

  @NonNull
  public final View courseIndicator;

  @NonNull
  public final LinearLayout courseInfoLayout;

  @NonNull
  public final TextView tvCourseName;

  private ItemDeptCourseBinding(@NonNull CardView rootView, @NonNull ImageButton btnDeleteCourse,
      @NonNull CardView courseIconCard, @NonNull View courseIndicator,
      @NonNull LinearLayout courseInfoLayout, @NonNull TextView tvCourseName) {
    this.rootView = rootView;
    this.btnDeleteCourse = btnDeleteCourse;
    this.courseIconCard = courseIconCard;
    this.courseIndicator = courseIndicator;
    this.courseInfoLayout = courseInfoLayout;
    this.tvCourseName = tvCourseName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDeptCourseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDeptCourseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_dept_course, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDeptCourseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteCourse;
      ImageButton btnDeleteCourse = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteCourse == null) {
        break missingId;
      }

      id = R.id.courseIconCard;
      CardView courseIconCard = ViewBindings.findChildViewById(rootView, id);
      if (courseIconCard == null) {
        break missingId;
      }

      id = R.id.courseIndicator;
      View courseIndicator = ViewBindings.findChildViewById(rootView, id);
      if (courseIndicator == null) {
        break missingId;
      }

      id = R.id.courseInfoLayout;
      LinearLayout courseInfoLayout = ViewBindings.findChildViewById(rootView, id);
      if (courseInfoLayout == null) {
        break missingId;
      }

      id = R.id.tvCourseName;
      TextView tvCourseName = ViewBindings.findChildViewById(rootView, id);
      if (tvCourseName == null) {
        break missingId;
      }

      return new ItemDeptCourseBinding((CardView) rootView, btnDeleteCourse, courseIconCard,
          courseIndicator, courseInfoLayout, tvCourseName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
