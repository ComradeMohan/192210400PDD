// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UploadMaterialBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final Button btnSubmitResources;

  @NonNull
  public final TextView courseCode;

  @NonNull
  public final LinearLayout pdfContainer;

  @NonNull
  public final LinearLayout progressContainer;

  @NonNull
  public final LinearLayout selectedFilesContainer;

  @NonNull
  public final LinearLayout toolbar;

  @NonNull
  public final TextView tvSelectType;

  @NonNull
  public final LinearLayout uploadArea;

  @NonNull
  public final ProgressBar uploadProgressBar;

  @NonNull
  public final TextView uploadStatusText;

  private UploadMaterialBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView backButton,
      @NonNull Button btnSubmitResources, @NonNull TextView courseCode,
      @NonNull LinearLayout pdfContainer, @NonNull LinearLayout progressContainer,
      @NonNull LinearLayout selectedFilesContainer, @NonNull LinearLayout toolbar,
      @NonNull TextView tvSelectType, @NonNull LinearLayout uploadArea,
      @NonNull ProgressBar uploadProgressBar, @NonNull TextView uploadStatusText) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.btnSubmitResources = btnSubmitResources;
    this.courseCode = courseCode;
    this.pdfContainer = pdfContainer;
    this.progressContainer = progressContainer;
    this.selectedFilesContainer = selectedFilesContainer;
    this.toolbar = toolbar;
    this.tvSelectType = tvSelectType;
    this.uploadArea = uploadArea;
    this.uploadProgressBar = uploadProgressBar;
    this.uploadStatusText = uploadStatusText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UploadMaterialBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UploadMaterialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.upload_material, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UploadMaterialBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.btnSubmitResources;
      Button btnSubmitResources = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmitResources == null) {
        break missingId;
      }

      id = R.id.course_code;
      TextView courseCode = ViewBindings.findChildViewById(rootView, id);
      if (courseCode == null) {
        break missingId;
      }

      id = R.id.pdfContainer;
      LinearLayout pdfContainer = ViewBindings.findChildViewById(rootView, id);
      if (pdfContainer == null) {
        break missingId;
      }

      id = R.id.progressContainer;
      LinearLayout progressContainer = ViewBindings.findChildViewById(rootView, id);
      if (progressContainer == null) {
        break missingId;
      }

      id = R.id.selectedFilesContainer;
      LinearLayout selectedFilesContainer = ViewBindings.findChildViewById(rootView, id);
      if (selectedFilesContainer == null) {
        break missingId;
      }

      id = R.id.toolbar;
      LinearLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvSelectType;
      TextView tvSelectType = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectType == null) {
        break missingId;
      }

      id = R.id.uploadArea;
      LinearLayout uploadArea = ViewBindings.findChildViewById(rootView, id);
      if (uploadArea == null) {
        break missingId;
      }

      id = R.id.uploadProgressBar;
      ProgressBar uploadProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (uploadProgressBar == null) {
        break missingId;
      }

      id = R.id.uploadStatusText;
      TextView uploadStatusText = ViewBindings.findChildViewById(rootView, id);
      if (uploadStatusText == null) {
        break missingId;
      }

      return new UploadMaterialBinding((ConstraintLayout) rootView, backButton, btnSubmitResources,
          courseCode, pdfContainer, progressContainer, selectedFilesContainer, toolbar,
          tvSelectType, uploadArea, uploadProgressBar, uploadStatusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
