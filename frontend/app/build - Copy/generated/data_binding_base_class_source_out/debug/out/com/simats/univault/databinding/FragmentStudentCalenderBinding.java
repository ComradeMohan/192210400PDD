// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.ImageButton;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStudentCalenderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final GridLayout calendarGrid;

  @NonNull
  public final TextView monthYearText;

  @NonNull
  public final ImageButton nextMonthButton;

  @NonNull
  public final ImageButton prevMonthButton;

  @NonNull
  public final RecyclerView recyclerViewEvents;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final TextView textEmpty;

  private FragmentStudentCalenderBinding(@NonNull ConstraintLayout rootView,
      @NonNull GridLayout calendarGrid, @NonNull TextView monthYearText,
      @NonNull ImageButton nextMonthButton, @NonNull ImageButton prevMonthButton,
      @NonNull RecyclerView recyclerViewEvents, @NonNull ScrollView scrollView,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull TextView textEmpty) {
    this.rootView = rootView;
    this.calendarGrid = calendarGrid;
    this.monthYearText = monthYearText;
    this.nextMonthButton = nextMonthButton;
    this.prevMonthButton = prevMonthButton;
    this.recyclerViewEvents = recyclerViewEvents;
    this.scrollView = scrollView;
    this.swipeRefresh = swipeRefresh;
    this.textEmpty = textEmpty;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStudentCalenderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStudentCalenderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_student_calender, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStudentCalenderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendarGrid;
      GridLayout calendarGrid = ViewBindings.findChildViewById(rootView, id);
      if (calendarGrid == null) {
        break missingId;
      }

      id = R.id.monthYearText;
      TextView monthYearText = ViewBindings.findChildViewById(rootView, id);
      if (monthYearText == null) {
        break missingId;
      }

      id = R.id.nextMonthButton;
      ImageButton nextMonthButton = ViewBindings.findChildViewById(rootView, id);
      if (nextMonthButton == null) {
        break missingId;
      }

      id = R.id.prevMonthButton;
      ImageButton prevMonthButton = ViewBindings.findChildViewById(rootView, id);
      if (prevMonthButton == null) {
        break missingId;
      }

      id = R.id.recyclerViewEvents;
      RecyclerView recyclerViewEvents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewEvents == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.textEmpty;
      TextView textEmpty = ViewBindings.findChildViewById(rootView, id);
      if (textEmpty == null) {
        break missingId;
      }

      return new FragmentStudentCalenderBinding((ConstraintLayout) rootView, calendarGrid,
          monthYearText, nextMonthButton, prevMonthButton, recyclerViewEvents, scrollView,
          swipeRefresh, textEmpty);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
