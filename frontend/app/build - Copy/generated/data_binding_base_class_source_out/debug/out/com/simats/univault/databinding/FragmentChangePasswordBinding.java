// Generated by view binder compiler. Do not edit!
package com.simats.univault.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.simats.univault.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChangePasswordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final TextInputEditText confirmNewPasswordEditText;

  @NonNull
  public final TextInputLayout confirmPasswordInputLayout;

  @NonNull
  public final FrameLayout createAccountContainer;

  @NonNull
  public final TextInputEditText newPasswordEditText;

  @NonNull
  public final TextInputLayout newPasswordInputLayout;

  @NonNull
  public final TextInputEditText oldPasswordEditText;

  @NonNull
  public final TextInputLayout oldPasswordInputLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Button submitChangePasswordButton;

  @NonNull
  public final Toolbar toolbar;

  private FragmentChangePasswordBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView backButton, @NonNull TextInputEditText confirmNewPasswordEditText,
      @NonNull TextInputLayout confirmPasswordInputLayout,
      @NonNull FrameLayout createAccountContainer, @NonNull TextInputEditText newPasswordEditText,
      @NonNull TextInputLayout newPasswordInputLayout,
      @NonNull TextInputEditText oldPasswordEditText,
      @NonNull TextInputLayout oldPasswordInputLayout, @NonNull ProgressBar progressBar,
      @NonNull Button submitChangePasswordButton, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.confirmNewPasswordEditText = confirmNewPasswordEditText;
    this.confirmPasswordInputLayout = confirmPasswordInputLayout;
    this.createAccountContainer = createAccountContainer;
    this.newPasswordEditText = newPasswordEditText;
    this.newPasswordInputLayout = newPasswordInputLayout;
    this.oldPasswordEditText = oldPasswordEditText;
    this.oldPasswordInputLayout = oldPasswordInputLayout;
    this.progressBar = progressBar;
    this.submitChangePasswordButton = submitChangePasswordButton;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.confirmNewPasswordEditText;
      TextInputEditText confirmNewPasswordEditText = ViewBindings.findChildViewById(rootView, id);
      if (confirmNewPasswordEditText == null) {
        break missingId;
      }

      id = R.id.confirmPasswordInputLayout;
      TextInputLayout confirmPasswordInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordInputLayout == null) {
        break missingId;
      }

      id = R.id.createAccountContainer;
      FrameLayout createAccountContainer = ViewBindings.findChildViewById(rootView, id);
      if (createAccountContainer == null) {
        break missingId;
      }

      id = R.id.newPasswordEditText;
      TextInputEditText newPasswordEditText = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordEditText == null) {
        break missingId;
      }

      id = R.id.newPasswordInputLayout;
      TextInputLayout newPasswordInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordInputLayout == null) {
        break missingId;
      }

      id = R.id.oldPasswordEditText;
      TextInputEditText oldPasswordEditText = ViewBindings.findChildViewById(rootView, id);
      if (oldPasswordEditText == null) {
        break missingId;
      }

      id = R.id.oldPasswordInputLayout;
      TextInputLayout oldPasswordInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (oldPasswordInputLayout == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.submitChangePasswordButton;
      Button submitChangePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (submitChangePasswordButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentChangePasswordBinding((LinearLayout) rootView, backButton,
          confirmNewPasswordEditText, confirmPasswordInputLayout, createAccountContainer,
          newPasswordEditText, newPasswordInputLayout, oldPasswordEditText, oldPasswordInputLayout,
          progressBar, submitChangePasswordButton, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
